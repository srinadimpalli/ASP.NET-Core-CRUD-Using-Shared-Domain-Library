@{
    ViewBag.Title = "Welcome";
}

<div class="row mt-30">
    <div class="col-md-6 pr-50">

        <h1>Welcome</h1>

        <p>
            This solution demonstrates how to build
            web applications with <strong>Enterprise design patterns</strong>,
            many of which focus on fast and effective data access.
        </p>
        <hr />
        <p>
            This application demonstrates all 4 <strong>CRUD</strong>
            operations (Create Read, Update, Delete) and several <strong>CD</strong>
            (Clean Design) principles in a simple ASP.NET Core solution.
        </p>
        <hr />
        <p>
            Explore the source code and learn how to apply
            Enterprise design patterns in a full-stack environment.
            The table below lists the patterns used in this application.
        </p>

    </div>

    <div class="col-md-6 p-5 pl-15 pt-25">
        <img src="/images/enterprise.jpg" class="img-fluid shadow" />
    </div>

</div>

<div class="row py-50">
    <div class="col-12">

        <table class="table table-hover">
            <tr class="table-header">
                <th class="width-170">Pattern</th>
                <th>Usage</th>
            </tr>
            <tr>
                <td>Repository</td>
                <td>Provides easy access to data in a database table</td>
            </tr>
            <tr>
                <td>Unit-of-Work</td>
                <td>Processes multiple database operations as a single transaction</td>
            </tr>
            <tr>
                <td>Data Transfer Object</td>
                <td>An object that carries data from one place to another</td>
            </tr>
            <tr>
                <td>Active Record</td>
                <td>An object that represents a row in a database table</td>
            </tr>
            <tr>
                <td>Service Layer</td>
                <td>A layer of services supporting complex data operations</td>
            </tr>
            <tr>
                <td>Transaction Script</td>
                <td>Processes complex business operations with a single request</td>
            </tr>
            <tr>
                <td>Identity Map</td>
                <td>Ensures that each unique business object is loaded only once</td>
            </tr>
            <tr>
                <td>Identity Field</td>
                <td>An unique database identifier that is stored in each object</td>
            </tr>
            <tr>
                <td>Data Mapper</td>
                <td>An object that maps one object to another object format</td>
            </tr>
            <tr>
                <td>Lazy Load</td>
                <td>Loads data into memory only when absolutely necessary</td>
            </tr>
            <tr>
                <td>Eager Load</td>
                <td>Loads data into memory witout knowing when it will be used</td>
            </tr>
            <tr>
                <td>N-Tier</td>
                <td>A layered application architecture in N logical layers</td>
            </tr>

        </table>
    </div>
</div>


